var bluegenesJBrowseTool=function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){const r=o(1);e.exports={main:function(e,t,o,n,c){if(n||(n={}),!(e&&t&&o&&n&&c))throw new Error("Call main with correct signature");r(o.Gene.value,t.root).then(o=>{const{end:r,start:n,locatedOn:i}=o.chromosomeLocation,{taxonId:a}=o.organism,u=`${i.primaryIdentifier}:${n}...${r}`,s=`${t.root}/service/jbrowse/config/${a}`;fetch(t.root+"/service/web-properties").then(e=>e.json()).then(t=>{const o=t["web-properties"].project.title;var r=document.createElement("iframe");r.src=`${c.jbrowseUrl}${encodeURIComponent(s)}&loc=${u}&tracks=${o}-${a}-Gene`,r.width="100%",r.height="100%",r.frameBorder=0,e.appendChild(r)}).catch(()=>{e.appendChild(document.createTextNode("Failed to start JBrowse"))})}).catch(()=>{e.appendChild(document.createTextNode("Not available for this object"))})}}},function(e,t){e.exports=function(e,t,o=imjs){return new Promise((r,n)=>{new o.Service({root:t}).records((e=>({from:"Gene",select:["symbol","chromosomeLocation.start","chromosomeLocation.end","chromosomeLocation.locatedOn.primaryIdentifier","organism.taxonId"],where:[{path:"id",value:e,op:"=",code:"A"}]}))(e)).then(e=>{e.length?r(e[0]):n("No gene data with passed `geneId`!")}).catch(n)})}}]);